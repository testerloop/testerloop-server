enum RunStatus {
    RUNNING
    COMPLETED
}

enum TestStatus {
    FAILED
    PASSED
    IN_PROGRESS
}

type TestExecutionStatus {
    id: ID!
    testName: String!
    featureFile: String!
    testStatus: TestStatus!
    rerunOfId: ID # TODO this is not ideal and we'd like to return a TestExecution here
}

type TestRunStatus {
    runStatus: RunStatus!
    totalWorkers: Int!
    pendingWorkers: Int!
    activeWorkers: Int!
    completedWorkers: Int!
    testExecutionStatuses: [TestExecutionStatus]!
}

extend type Query {
    getRunStatus(runId: ID!): TestRunStatus! # TODO this should really be achieved by Query.testRun in the future
}

extend type Mutation {
    setTestExecutionStatus(
        testExecutionId: ID!
        testStatus: TestStatus!
    ): TestExecutionStatus!
    refreshRunStatus(runId: ID!): RunStatus!
}
